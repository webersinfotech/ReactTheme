{"ast":null,"code":"var _jsxFileName = \"/home/astics/Desktop/Rushabh/multikarthtmnl-321/multikarthtmnl-321/all_in_one_multikart_react/back-end/src/components/common/datatable.js\";\nimport React, { Component, Fragment } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nexport class Datatable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectRow = (e, i) => {\n      if (!e.target.checked) {\n        this.setState({\n          checkedValues: this.state.checkedValues.filter((item, j) => i !== item)\n        });\n      } else {\n        this.state.checkedValues.push(i);\n        this.setState({\n          checkedValues: this.state.checkedValues\n        });\n      }\n    };\n\n    this.handleRemoveRow = () => {\n      const selectedValues = this.state.checkedValues;\n      const updatedData = this.state.myData.filter(function (el) {\n        return selectedValues.indexOf(el.id) < 0;\n      });\n      this.setState({\n        myData: updatedData\n      });\n      toast.success(\"Successfully Deleted !\");\n    };\n\n    this.renderEditable = cellInfo => {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"#fafafa\"\n        },\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onBlur: e => {\n          const data = [...this.state.myData];\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n          this.setState({\n            myData: data\n          });\n        },\n        dangerouslySetInnerHTML: {\n          __html: this.state.myData[cellInfo.index][cellInfo.column.id]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    };\n\n    this.state = {\n      checkedValues: [],\n      myData: this.props.myData\n    };\n  }\n\n  Capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  render() {\n    const _this$props = this.props,\n          pageSize = _this$props.pageSize,\n          myClass = _this$props.myClass,\n          multiSelectOption = _this$props.multiSelectOption,\n          pagination = _this$props.pagination;\n    const myData = this.state.myData;\n    const columns = [];\n\n    for (var key in myData[0]) {\n      let editable = this.renderEditable;\n\n      if (key === \"image\") {\n        editable = null;\n      }\n\n      if (key === \"status\") {\n        editable = null;\n      }\n\n      if (key === \"avtar\") {\n        editable = null;\n      }\n\n      if (key === \"vendor\") {\n        editable = null;\n      }\n\n      if (key === \"order_status\") {\n        editable = null;\n      }\n\n      columns.push({\n        Header: React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, this.Capitalize(key.toString())),\n        accessor: key,\n        Cell: editable,\n        style: {\n          textAlign: 'center'\n        }\n      });\n    }\n\n    if (multiSelectOption == true) {\n      columns.push({\n        Header: React.createElement(\"button\", {\n          className: \"btn btn-danger btn-sm btn-delete mb-0 b-r-4\",\n          onClick: e => {\n            if (window.confirm('Are you sure you wish to delete this item?')) this.handleRemoveRow();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Delete\"),\n        id: 'delete',\n        accessor: str => \"delete\",\n        sortable: false,\n        style: {\n          textAlign: 'center'\n        },\n        Cell: row => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: row.original.id,\n          defaultChecked: this.state.checkedValues.includes(row.original.id),\n          onChange: e => this.selectRow(e, row.original.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }))),\n        accessor: key,\n        style: {\n          textAlign: 'center'\n        }\n      });\n    } else {\n      columns.push({\n        Header: React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \"Action\"),\n        id: 'delete',\n        accessor: str => \"delete\",\n        Cell: row => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          onClick: () => {\n            if (window.confirm('Are you sure you wish to delete this item?')) {\n              let data = myData;\n              data.splice(row.index, 1);\n              this.setState({\n                myData: data\n              });\n            }\n\n            toast.success(\"Successfully Deleted !\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-trash\",\n          style: {\n            width: 35,\n            fontSize: 20,\n            padding: 11,\n            color: '#e4566e'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-pencil\",\n          style: {\n            width: 35,\n            fontSize: 20,\n            padding: 11,\n            color: 'rgb(40, 167, 69)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }))),\n        style: {\n          textAlign: 'center'\n        },\n        sortable: false\n      });\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(ReactTable, {\n      data: myData,\n      columns: columns,\n      defaultPageSize: pageSize,\n      className: myClass,\n      showPagination: pagination,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default Datatable;","map":{"version":3,"sources":["/home/astics/Desktop/Rushabh/multikarthtmnl-321/multikarthtmnl-321/all_in_one_multikart_react/back-end/src/components/common/datatable.js"],"names":["React","Component","Fragment","ReactTable","ToastContainer","toast","Datatable","constructor","props","selectRow","e","i","target","checked","setState","checkedValues","state","filter","item","j","push","handleRemoveRow","selectedValues","updatedData","myData","el","indexOf","id","success","renderEditable","cellInfo","backgroundColor","data","index","column","innerHTML","__html","Capitalize","str","charAt","toUpperCase","slice","render","pageSize","myClass","multiSelectOption","pagination","columns","key","editable","Header","toString","accessor","Cell","style","textAlign","window","confirm","sortable","row","original","includes","splice","width","fontSize","padding","color"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nexport class Datatable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            checkedValues: [],\r\n            myData: this.props.myData\r\n        }\r\n    }\r\n\r\n    selectRow = (e, i) => {\r\n        if (!e.target.checked) {\r\n            this.setState({\r\n                checkedValues: this.state.checkedValues.filter((item, j) => i !== item)\r\n            });\r\n        } else {\r\n            this.state.checkedValues.push(i);\r\n            this.setState({\r\n                checkedValues: this.state.checkedValues\r\n            })\r\n        }\r\n    }\r\n\r\n    handleRemoveRow = () => {\r\n        const selectedValues = this.state.checkedValues;\r\n        const updatedData = this.state.myData.filter(function (el) {\r\n            return selectedValues.indexOf(el.id) < 0;\r\n        });\r\n        this.setState({\r\n            myData: updatedData\r\n        })\r\n        toast.success(\"Successfully Deleted !\")\r\n    };\r\n\r\n    renderEditable = (cellInfo) => {\r\n        return (\r\n            <div\r\n                style={{ backgroundColor: \"#fafafa\" }}\r\n                contentEditable\r\n                suppressContentEditableWarning\r\n                onBlur={e => {\r\n                    const data = [...this.state.myData];\r\n                    data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\r\n                    this.setState({ myData: data });\r\n                }}\r\n                dangerouslySetInnerHTML={{\r\n                    __html: this.state.myData[cellInfo.index][cellInfo.column.id]\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    Capitalize(str) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n\r\n    render() {\r\n        const { pageSize, myClass, multiSelectOption, pagination } = this.props;\r\n        const { myData } = this.state\r\n\r\n        const columns = [];\r\n        for (var key in myData[0]) {\r\n\r\n            let editable = this.renderEditable\r\n            if (key === \"image\") {\r\n                editable = null;\r\n            }\r\n            if (key === \"status\") {\r\n                editable = null;\r\n            }\r\n            if (key === \"avtar\") {\r\n                editable = null;\r\n            }\r\n            if (key === \"vendor\") {\r\n                editable = null;\r\n            }\r\n            if(key === \"order_status\"){\r\n                editable = null;\r\n            }\r\n\r\n            columns.push(\r\n                {\r\n                    Header: <b>{this.Capitalize(key.toString())}</b>,\r\n                    accessor: key,\r\n                    Cell: editable,\r\n                    style: {\r\n                        textAlign: 'center'\r\n                    }\r\n                });\r\n        }\r\n\r\n        if (multiSelectOption == true) {\r\n            columns.push(\r\n                {\r\n                    Header: <button className=\"btn btn-danger btn-sm btn-delete mb-0 b-r-4\"\r\n                        onClick={\r\n                            (e) => {\r\n                                if (window.confirm('Are you sure you wish to delete this item?'))\r\n                                    this.handleRemoveRow()\r\n                            }}>Delete</button>,\r\n                    id: 'delete',\r\n                    accessor: str => \"delete\",\r\n                    sortable: false,\r\n                    style: {\r\n                        textAlign: 'center'\r\n                    },\r\n                    Cell: (row) => (\r\n                        <div>\r\n                            <span >\r\n                                <input type=\"checkbox\" name={row.original.id} defaultChecked={this.state.checkedValues.includes(row.original.id)}\r\n                                    onChange={e => this.selectRow(e, row.original.id)} />\r\n                            </span>\r\n                        </div>\r\n                    ),\r\n                    accessor: key,\r\n                    style: {\r\n                        textAlign: 'center'\r\n                    }\r\n                }\r\n            )\r\n        } else {\r\n            columns.push(\r\n                {\r\n                    Header: <b>Action</b>,\r\n                    id: 'delete',\r\n                    accessor: str => \"delete\",\r\n                    Cell: (row) => (\r\n                        <div>\r\n                            <span onClick={() => {\r\n                                if (window.confirm('Are you sure you wish to delete this item?')) {\r\n                                    let data = myData;\r\n                                    data.splice(row.index, 1);\r\n                                    this.setState({ myData: data });\r\n                                }\r\n                                toast.success(\"Successfully Deleted !\")\r\n\r\n                            }}>\r\n                                <i className=\"fa fa-trash\" style={{ width: 35, fontSize: 20, padding: 11, color: '#e4566e' }}\r\n                                ></i>\r\n                            </span>\r\n\r\n                        <span><i className=\"fa fa-pencil\" style={{ width: 35, fontSize: 20, padding: 11,color:'rgb(40, 167, 69)' }}></i></span>\r\n                    </div>\r\n                ),\r\n                style: {\r\n                    textAlign: 'center'\r\n                },\r\n                sortable: false\r\n            }\r\n        )\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <ReactTable\r\n                    data={myData}\r\n                    columns={columns}\r\n                    defaultPageSize={pageSize}\r\n                    className={myClass}\r\n                    showPagination={pagination}\r\n                />\r\n                <ToastContainer />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Datatable\r\n"]},"metadata":{},"sourceType":"module"}